services:
  parsedmarc-init:
    image: accolon/parsedmarc:init
    restart: always
    volumes:
      - ./data/conf/parsedmarc/:/etc/parsedmarc/:rw
      - ./data/conf/nginx/ssl/:/etc/nginx/ssl/:rw
      - ./data/data/elasticsearch:/usr/share/elasticsearch/data/:rw
      - ./data/data/geoipupdate/:/usr/share/GeoIP:z,rw
    networks:
      - parsedmarc-network
    healthcheck:
      test: [ "CMD", "test", "-f", "/ready" ]
      interval: 10s
      timeout: 5s
      retries: 9999
      start_period: 10s

  parsedmarc:
    image: accolon/parsedmarc:latest
    volumes:
      - ./data/conf/parsedmarc/:/etc/parsedmarc/
      - ./data/data/geoipupdate/:/usr/share/GeoIP:z,ro
    restart: always
    networks:
      - parsedmarc-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    environment:
      - cluster.name=parsedmarc
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false # required to prevent warnings in kibana dashboard. Security is not required as we're only operating docker-internally
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/data/elasticsearch:/usr/share/elasticsearch/data/
    restart: always
    networks:
      - parsedmarc-network
    expose: # only expose docker-internally
      - 9200
    healthcheck:
      test: [ "CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health" ]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      parsedmarc-init:
        condition: service_started

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200
      - telemetry.enabled=false
      - telemetry.optIn=false
      - security.showInsecureClusterWarning=false
    expose: # only expose docker-internally
      - 5601
    restart: always
    networks:
      - parsedmarc-network
    depends_on:
      elasticsearch:
        condition: service_healthy


  geoipupdate:
    image: ghcr.io/maxmind/geoipupdate
    env_file:
      - ./data/conf/geoipupdate/geoipupdate.env
    environment:
      - "GEOIPUPDATE_EDITION_IDS=GeoLite2-ASN GeoLite2-City GeoLite2-Country"
      - GEOIPUPDATE_PRESERVE_FILE_TIMES=1
    restart: always
    volumes:
      - ./data/data/geoipupdate/:/usr/share/GeoIP:z,rw
    depends_on:
      parsedmarc-init:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "443:443" # change this if port 443 is already used
    volumes:
      - ./data/conf/nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./data/conf/nginx/ssl/:/etc/nginx/ssl/:ro
      - ./data/conf/nginx/htpasswd:/etc/nginx/htpasswd:ro
    networks:
      - parsedmarc-network
    depends_on:
      kibana:
        condition: service_healthy
      parsedmarc-init:
        condition: service_healthy

networks:
  parsedmarc-network:
    driver: bridge
